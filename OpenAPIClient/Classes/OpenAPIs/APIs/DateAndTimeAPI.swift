//
// DateAndTimeAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class DateAndTimeAPI {

    /**
     Current Date
     
     - parameter zone: (query) A valid timezone as specified [here](http://php.net/manual/en/timezones.php). 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func v1CurrentDateGet(zone: String, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: CurrentDateSuccess?, _ error: Error?) -> Void)) -> RequestTask {
        return v1CurrentDateGetWithRequestBuilder(zone: zone).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Current Date
     - GET /v1/currentDate
     - Returns the current date for the specified time zone. 
     - parameter zone: (query) A valid timezone as specified [here](http://php.net/manual/en/timezones.php). 
     - returns: RequestBuilder<CurrentDateSuccess> 
     */
    open class func v1CurrentDateGetWithRequestBuilder(zone: String) -> RequestBuilder<CurrentDateSuccess> {
        let localVariablePath = "/v1/currentDate"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "zone": (wrappedValue: zone.encodeToJSON(), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<CurrentDateSuccess>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }

    /**
     Current Time
     
     - parameter zone: (query) A valid timezone as specified [here](http://php.net/manual/en/timezones.php). 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func v1CurrentTimeGet(zone: String, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: CurrentTimeSuccess?, _ error: Error?) -> Void)) -> RequestTask {
        return v1CurrentTimeGetWithRequestBuilder(zone: zone).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Current Time
     - GET /v1/currentTime
     - Returns the current time for the specified time zone. 
     - parameter zone: (query) A valid timezone as specified [here](http://php.net/manual/en/timezones.php). 
     - returns: RequestBuilder<CurrentTimeSuccess> 
     */
    open class func v1CurrentTimeGetWithRequestBuilder(zone: String) -> RequestBuilder<CurrentTimeSuccess> {
        let localVariablePath = "/v1/currentTime"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "zone": (wrappedValue: zone.encodeToJSON(), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<CurrentTimeSuccess>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }

    /**
     Current Timestamp
     
     - parameter zone: (query) A valid timezone as specified [here](http://php.net/manual/en/timezones.php). 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func v1CurrentTimestampGet(zone: String, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: CurrentTimestampSuccess?, _ error: Error?) -> Void)) -> RequestTask {
        return v1CurrentTimestampGetWithRequestBuilder(zone: zone).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Current Timestamp
     - GET /v1/currentTimestamp
     - Returns the current [unix/epoch](https://en.wikipedia.org/wiki/Unix_time) timestamp for the specified time zone. 
     - parameter zone: (query) A valid timezone as specified [here](http://php.net/manual/en/timezones.php). 
     - returns: RequestBuilder<CurrentTimestampSuccess> 
     */
    open class func v1CurrentTimestampGetWithRequestBuilder(zone: String) -> RequestBuilder<CurrentTimestampSuccess> {
        let localVariablePath = "/v1/currentTimestamp"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "zone": (wrappedValue: zone.encodeToJSON(), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<CurrentTimestampSuccess>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }
}
