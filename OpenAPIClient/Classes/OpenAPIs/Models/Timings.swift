//
// Timings.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct Timings: Codable, JSONEncodable, Hashable {

    public var fajr: String?
    public var sunrise: String?
    public var dhuhr: String?
    public var asr: String?
    public var sunset: String?
    public var maghrib: String?
    public var isha: String?
    public var imsak: String?
    public var midnight: String?

    public init(fajr: String? = nil, sunrise: String? = nil, dhuhr: String? = nil, asr: String? = nil, sunset: String? = nil, maghrib: String? = nil, isha: String? = nil, imsak: String? = nil, midnight: String? = nil) {
        self.fajr = fajr
        self.sunrise = sunrise
        self.dhuhr = dhuhr
        self.asr = asr
        self.sunset = sunset
        self.maghrib = maghrib
        self.isha = isha
        self.imsak = imsak
        self.midnight = midnight
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case fajr = "Fajr"
        case sunrise = "Sunrise"
        case dhuhr = "Dhuhr"
        case asr = "Asr"
        case sunset = "Sunset"
        case maghrib = "Maghrib"
        case isha = "Isha"
        case imsak = "Imsak"
        case midnight = "Midnight"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(fajr, forKey: .fajr)
        try container.encodeIfPresent(sunrise, forKey: .sunrise)
        try container.encodeIfPresent(dhuhr, forKey: .dhuhr)
        try container.encodeIfPresent(asr, forKey: .asr)
        try container.encodeIfPresent(sunset, forKey: .sunset)
        try container.encodeIfPresent(maghrib, forKey: .maghrib)
        try container.encodeIfPresent(isha, forKey: .isha)
        try container.encodeIfPresent(imsak, forKey: .imsak)
        try container.encodeIfPresent(midnight, forKey: .midnight)
    }
}

