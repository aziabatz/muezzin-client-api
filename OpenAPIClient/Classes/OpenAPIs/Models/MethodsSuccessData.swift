//
// MethodsSuccessData.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Contains a collection of key-object mapping containing details of different prayer time calculation methods. */
public struct MethodsSuccessData: Codable, JSONEncodable, Hashable {

    public var MWL: MethodsSuccessDataMWL?
    public var ISNA: MethodsSuccessDataISNA?
    public var EGYPT: MethodsSuccessDataEGYPT?
    public var MAKKAH: MethodsSuccessDataMAKKAH?
    public var KARACHI: MethodsSuccessDataKARACHI?
    public var TEHRAN: MethodsSuccessDataTEHRAN?
    public var JAFARI: MethodsSuccessDataJAFARI?
    public var GULF: MethodsSuccessDataGULF?
    public var KUWAIT: MethodsSuccessDataKUWAIT?
    public var QATAR: MethodsSuccessDataQATAR?
    public var SINGAPORE: MethodsSuccessDataSINGAPORE?
    public var FRANCE: MethodsSuccessDataFRANCE?
    public var TURKEY: MethodsSuccessDataTURKEY?
    public var RUSSIA: MethodsSuccessDataRUSSIA?
    public var MOONSIGHTING: MethodsSuccessDataMOONSIGHTING?
    public var DUBAI: MethodsSuccessDataDUBAI?
    public var JAKIM: MethodsSuccessDataJAKIM?
    public var TUNISIA: MethodsSuccessDataTUNISIA?
    public var ALGERIA: MethodsSuccessDataALGERIA?
    public var KEMENAG: MethodsSuccessDataKEMENAG?
    public var MOROCCO: MethodsSuccessDataMOROCCO?
    public var PORTUGAL: MethodsSuccessDataPORTUGAL?
    public var JORDAN: MethodsSuccessDataJORDAN?
    public var CUSTOM: MethodsSuccessDataCUSTOM?

    public init(MWL: MethodsSuccessDataMWL? = nil, ISNA: MethodsSuccessDataISNA? = nil, EGYPT: MethodsSuccessDataEGYPT? = nil, MAKKAH: MethodsSuccessDataMAKKAH? = nil, KARACHI: MethodsSuccessDataKARACHI? = nil, TEHRAN: MethodsSuccessDataTEHRAN? = nil, JAFARI: MethodsSuccessDataJAFARI? = nil, GULF: MethodsSuccessDataGULF? = nil, KUWAIT: MethodsSuccessDataKUWAIT? = nil, QATAR: MethodsSuccessDataQATAR? = nil, SINGAPORE: MethodsSuccessDataSINGAPORE? = nil, FRANCE: MethodsSuccessDataFRANCE? = nil, TURKEY: MethodsSuccessDataTURKEY? = nil, RUSSIA: MethodsSuccessDataRUSSIA? = nil, MOONSIGHTING: MethodsSuccessDataMOONSIGHTING? = nil, DUBAI: MethodsSuccessDataDUBAI? = nil, JAKIM: MethodsSuccessDataJAKIM? = nil, TUNISIA: MethodsSuccessDataTUNISIA? = nil, ALGERIA: MethodsSuccessDataALGERIA? = nil, KEMENAG: MethodsSuccessDataKEMENAG? = nil, MOROCCO: MethodsSuccessDataMOROCCO? = nil, PORTUGAL: MethodsSuccessDataPORTUGAL? = nil, JORDAN: MethodsSuccessDataJORDAN? = nil, CUSTOM: MethodsSuccessDataCUSTOM? = nil) {
        self.MWL = MWL
        self.ISNA = ISNA
        self.EGYPT = EGYPT
        self.MAKKAH = MAKKAH
        self.KARACHI = KARACHI
        self.TEHRAN = TEHRAN
        self.JAFARI = JAFARI
        self.GULF = GULF
        self.KUWAIT = KUWAIT
        self.QATAR = QATAR
        self.SINGAPORE = SINGAPORE
        self.FRANCE = FRANCE
        self.TURKEY = TURKEY
        self.RUSSIA = RUSSIA
        self.MOONSIGHTING = MOONSIGHTING
        self.DUBAI = DUBAI
        self.JAKIM = JAKIM
        self.TUNISIA = TUNISIA
        self.ALGERIA = ALGERIA
        self.KEMENAG = KEMENAG
        self.MOROCCO = MOROCCO
        self.PORTUGAL = PORTUGAL
        self.JORDAN = JORDAN
        self.CUSTOM = CUSTOM
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case MWL
        case ISNA
        case EGYPT
        case MAKKAH
        case KARACHI
        case TEHRAN
        case JAFARI
        case GULF
        case KUWAIT
        case QATAR
        case SINGAPORE
        case FRANCE
        case TURKEY
        case RUSSIA
        case MOONSIGHTING
        case DUBAI
        case JAKIM
        case TUNISIA
        case ALGERIA
        case KEMENAG
        case MOROCCO
        case PORTUGAL
        case JORDAN
        case CUSTOM
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(MWL, forKey: .MWL)
        try container.encodeIfPresent(ISNA, forKey: .ISNA)
        try container.encodeIfPresent(EGYPT, forKey: .EGYPT)
        try container.encodeIfPresent(MAKKAH, forKey: .MAKKAH)
        try container.encodeIfPresent(KARACHI, forKey: .KARACHI)
        try container.encodeIfPresent(TEHRAN, forKey: .TEHRAN)
        try container.encodeIfPresent(JAFARI, forKey: .JAFARI)
        try container.encodeIfPresent(GULF, forKey: .GULF)
        try container.encodeIfPresent(KUWAIT, forKey: .KUWAIT)
        try container.encodeIfPresent(QATAR, forKey: .QATAR)
        try container.encodeIfPresent(SINGAPORE, forKey: .SINGAPORE)
        try container.encodeIfPresent(FRANCE, forKey: .FRANCE)
        try container.encodeIfPresent(TURKEY, forKey: .TURKEY)
        try container.encodeIfPresent(RUSSIA, forKey: .RUSSIA)
        try container.encodeIfPresent(MOONSIGHTING, forKey: .MOONSIGHTING)
        try container.encodeIfPresent(DUBAI, forKey: .DUBAI)
        try container.encodeIfPresent(JAKIM, forKey: .JAKIM)
        try container.encodeIfPresent(TUNISIA, forKey: .TUNISIA)
        try container.encodeIfPresent(ALGERIA, forKey: .ALGERIA)
        try container.encodeIfPresent(KEMENAG, forKey: .KEMENAG)
        try container.encodeIfPresent(MOROCCO, forKey: .MOROCCO)
        try container.encodeIfPresent(PORTUGAL, forKey: .PORTUGAL)
        try container.encodeIfPresent(JORDAN, forKey: .JORDAN)
        try container.encodeIfPresent(CUSTOM, forKey: .CUSTOM)
    }
}

